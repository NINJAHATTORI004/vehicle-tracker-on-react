{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\OneDrive\\\\Desktop\\\\reactprojectt\\\\vehicle-tracker\\\\src\\\\component\\\\map.js\",\n  _s = $RefreshSig$();\n// src/component/Map.js\nimport React, { useEffect, useState } from 'react';\nimport { GoogleMap, LoadScript, Marker, Polyline } from '@react-google-maps/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: '100%',\n  height: '100vh'\n};\nconst center = {\n  lat: -3.745,\n  lng: -38.523\n};\nconst Map = () => {\n  _s();\n  const [vehiclePosition, setVehiclePosition] = useState(center);\n  const [path, setPath] = useState([center]);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      // Fetch new vehicle position from API\n      fetch('/api/vehicle-position').then(response => response.json()).then(data => {\n        setVehiclePosition(data);\n        setPath(prevPath => [...prevPath, data]);\n      });\n    }, 5000);\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(LoadScript, {\n    googleMapsApiKey: \"AIzaSyDb5NTtlOz0KJ9lfVFvTgI7BPBV1PUxaNA\",\n    children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: containerStyle,\n      center: vehiclePosition,\n      zoom: 10,\n      children: [/*#__PURE__*/_jsxDEV(Marker, {\n        position: vehiclePosition\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Polyline, {\n        path: path,\n        options: {\n          strokeColor: '#FF0000'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(Map, \"em5y5odS6flp3ts5ntFseNOAwE0=\");\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useEffect","useState","GoogleMap","LoadScript","Marker","Polyline","jsxDEV","_jsxDEV","containerStyle","width","height","center","lat","lng","Map","_s","vehiclePosition","setVehiclePosition","path","setPath","interval","setInterval","fetch","then","response","json","data","prevPath","clearInterval","googleMapsApiKey","children","mapContainerStyle","zoom","position","fileName","_jsxFileName","lineNumber","columnNumber","options","strokeColor","_c","$RefreshReg$"],"sources":["C:/Users/HP/OneDrive/Desktop/reactprojectt/vehicle-tracker/src/component/map.js"],"sourcesContent":["// src/component/Map.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport { GoogleMap, LoadScript, Marker, Polyline } from '@react-google-maps/api';\r\n\r\nconst containerStyle = {\r\n  width: '100%',\r\n  height: '100vh'\r\n};\r\n\r\nconst center = {\r\n  lat: -3.745,\r\n  lng: -38.523\r\n};\r\n\r\nconst Map = () => {\r\n  const [vehiclePosition, setVehiclePosition] = useState(center);\r\n  const [path, setPath] = useState([center]);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      // Fetch new vehicle position from API\r\n      fetch('/api/vehicle-position')\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          setVehiclePosition(data);\r\n          setPath(prevPath => [...prevPath, data]);\r\n        });\r\n    }, 5000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  return (\r\n    <LoadScript googleMapsApiKey=\"AIzaSyDb5NTtlOz0KJ9lfVFvTgI7BPBV1PUxaNA\">\r\n      <GoogleMap\r\n        mapContainerStyle={containerStyle}\r\n        center={vehiclePosition}\r\n        zoom={10}\r\n      >\r\n        <Marker position={vehiclePosition} />\r\n        <Polyline path={path} options={{ strokeColor: '#FF0000' }} />\r\n      </GoogleMap>\r\n    </LoadScript>\r\n  );\r\n};\r\n\r\nexport default Map;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,UAAU,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjF,MAAMC,cAAc,GAAG;EACrBC,KAAK,EAAE,MAAM;EACbC,MAAM,EAAE;AACV,CAAC;AAED,MAAMC,MAAM,GAAG;EACbC,GAAG,EAAE,CAAC,KAAK;EACXC,GAAG,EAAE,CAAC;AACR,CAAC;AAED,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGhB,QAAQ,CAACU,MAAM,CAAC;EAC9D,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGlB,QAAQ,CAAC,CAACU,MAAM,CAAC,CAAC;EAE1CX,SAAS,CAAC,MAAM;IACd,MAAMoB,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjC;MACAC,KAAK,CAAC,uBAAuB,CAAC,CAC3BC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;QACZT,kBAAkB,CAACS,IAAI,CAAC;QACxBP,OAAO,CAACQ,QAAQ,IAAI,CAAC,GAAGA,QAAQ,EAAED,IAAI,CAAC,CAAC;MAC1C,CAAC,CAAC;IACN,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAME,aAAa,CAACR,QAAQ,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEb,OAAA,CAACJ,UAAU;IAAC0B,gBAAgB,EAAC,yCAAyC;IAAAC,QAAA,eACpEvB,OAAA,CAACL,SAAS;MACR6B,iBAAiB,EAAEvB,cAAe;MAClCG,MAAM,EAAEK,eAAgB;MACxBgB,IAAI,EAAE,EAAG;MAAAF,QAAA,gBAETvB,OAAA,CAACH,MAAM;QAAC6B,QAAQ,EAAEjB;MAAgB;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACrC9B,OAAA,CAACF,QAAQ;QAACa,IAAI,EAAEA,IAAK;QAACoB,OAAO,EAAE;UAAEC,WAAW,EAAE;QAAU;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEjB,CAAC;AAACtB,EAAA,CA9BID,GAAG;AAAA0B,EAAA,GAAH1B,GAAG;AAgCT,eAAeA,GAAG;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}